name: Automated Deployment

on:
  push:
    branches: [ main ]
    paths:
      - "web/**"
  workflow_dispatch:

jobs:
  build:
    name: Build and push to Docker
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache cargo-chef layers
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/docker-build-cache
          key: ${{ runner.os }}-cargo-chef-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-chef-

      - name: Build Actix-web server with cache
        working-directory: ./web/server
        run: |
          docker buildx build \
            --cache-from=type=local,src=${{ github.workspace }}/docker-build-cache \
            --cache-to=type=local,dest=${{ github.workspace }}/docker-build-cache \
            --tag jangryga/clockwork-server:latest \
            .
          docker push jangryga/clockwork-server:latest

      - name: Build Nginx
        working-directory: ./web/nginx
        run: |
          docker build --tag jangryga/clockwork-balancer:latest .
          docker push jangryga/clockwork-balancer:latest
  
  deploy:
    name: Deploy to Linode
    runs-on: ubuntu-22.04
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"
      - name: Build and deploy images on Linode
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp  -o StrictHostKeyChecking=no -r ./web/docker-compose.yaml root@${{ secrets.LINODE_IP_ADDRESS }}:/app
          ssh -o StrictHostKeyChecking=no root@${{ secrets.LINODE_IP_ADDRESS }} << 'ENDSSH'
            cd /app
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker compose pull 
            docker compose up -d
          ENDSSH
      - name: Update client
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        working-directory: ./web/client
        run: |
          npm install
          npm run build
          ssh -o StrictHostKeyChecking=no root@${{ secrets.LINODE_IP_ADDRESS }} "rm -rf /var/www/skillstech.app/*"
          scp  -o StrictHostKeyChecking=no -r ./dist/* root@${{ secrets.LINODE_IP_ADDRESS }}:/var/www/skillstech.app/
